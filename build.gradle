plugins {
    id 'org.springframework.boot' version '2.7.3' apply false
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java-library'
    id 'maven-publish'
}

group = 'com.gascharge.taemin'
version = '0.0.1-SNAPSHOT'

dependencyManagement {
    imports {
        mavenBom org.springframework.boot.gradle.plugin.SpringBootPlugin.BOM_COORDINATES
    }
}

repositories {
    mavenCentral()
}

if (project.hasProperty('dev')) {
    repositories {
        mavenLocal()
    }

    dependencies {
        api 'com.gascharge.taemin:gascharge-module-yml:0.0.1-SNAPSHOT'
        api 'com.gascharge.taemin:gascharge-common-common:0.0.1-SNAPSHOT'
        api 'com.gascharge.taemin:gascharge-module-jpa:0.0.1-SNAPSHOT'
    }
} else if (project.hasProperty("pro")) {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/illinia/gascharge-lib")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    dependencies {
        api 'com.gascharge.taemin:gascharge-module-yml:0.0.1-SNAPSHOT'
        api 'com.gascharge.taemin:gascharge-common-common:0.0.1-SNAPSHOT'
        api 'com.gascharge.taemin:gascharge-module-jpa:0.0.1-SNAPSHOT'
    }
} else {
    dependencies {
        api project(":gascharge-module-yml")
        api project(":gascharge-common-common")
        api project(":gascharge-module-jpa")
    }
}


configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    implementation 'org.projectlombok:lombok:1.18.26'
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    testImplementation 'org.projectlombok:lombok:1.18.26'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.26'

    implementation 'com.querydsl:querydsl-core'
    implementation 'com.querydsl:querydsl-jpa'

    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa" // querydsl JPAAnnotationProcessor 사용 지정
    annotationProcessor("jakarta.persistence:jakarta.persistence-api")
    annotationProcessor("jakarta.annotation:jakarta.annotation-api")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

def generated='src/main/generated'
sourceSets {
    main.java.srcDirs += [ generated ]
}

tasks.withType(JavaCompile) {
    options.annotationProcessorGeneratedSourcesDirectory = file(generated)
}

clean.doLast {
    file(generated).deleteDir()
}

publishing {
    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/illinia/gascharge-lib")
            credentials {
                username = project.findProperty("gpr.user") ?: System.getenv("USERNAME")
                password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
            }
        }
    }
    publications {
        gpr(MavenPublication) {
            from(components.java)
        }
    }
}